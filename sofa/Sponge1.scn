<?xml version="1.0" ?>
<!-- NEW DEFAULT SOFA SCENE (Thanks to Jeremy Ringard for the caduceus model) -->
<Node name="root" gravity="0 -9.8 0" dt="0.01">
    <VisualStyle displayFlags="showCollisionModels" />

    <Node name="RequiredPlugins">
        <RequiredPlugin name="Sofa.Component.AnimationLoop"/> <!-- Needed to use components [FreeMotionAnimationLoop] -->
        <RequiredPlugin name="Sofa.Component.Collision.Detection.Algorithm"/> <!-- Needed to use components [BVHNarrowPhase BruteForceBroadPhase CollisionPipeline] -->
        <RequiredPlugin name="Sofa.Component.Collision.Detection.Intersection"/> <!-- Needed to use components [MinProximityIntersection] -->
        <RequiredPlugin name="Sofa.Component.Collision.Geometry"/> <!-- Needed to use components [LineCollisionModel PointCollisionModel TriangleCollisionModel] -->
        <RequiredPlugin name="Sofa.Component.Collision.Response.Contact"/> <!-- Needed to use components [DefaultContactManager] -->
        <RequiredPlugin name="Sofa.Component.Constraint.Lagrangian.Correction"/> <!-- Needed to use components [UncoupledConstraintCorrection] -->
        <RequiredPlugin name="Sofa.Component.Constraint.Lagrangian.Solver"/> <!-- Needed to use components [LCPConstraintSolver] -->
        <RequiredPlugin name="Sofa.Component.IO.Mesh"/> <!-- Needed to use components [MeshOBJLoader] -->
        <RequiredPlugin name="Sofa.Component.LinearSolver.Iterative"/> <!-- Needed to use components [CGLinearSolver] -->
        <RequiredPlugin name="Sofa.Component.Mapping.Linear"/> <!-- Needed to use components [BarycentricMapping] -->
        <RequiredPlugin name="Sofa.Component.Mass"/> <!-- Needed to use components [UniformMass] -->
        <RequiredPlugin name="Sofa.Component.ODESolver.Backward"/> <!-- Needed to use components [EulerImplicitSolver] -->
        <RequiredPlugin name="Sofa.Component.SolidMechanics.FEM.Elastic"/> <!-- Needed to use components [HexahedronFEMForceField] -->
        <RequiredPlugin name="Sofa.Component.StateContainer"/> <!-- Needed to use components [MechanicalObject] -->
        <RequiredPlugin name="Sofa.Component.Topology.Container.Constant"/> <!-- Needed to use components [MeshTopology] -->
        <RequiredPlugin name="Sofa.Component.Topology.Container.Grid"/> <!-- Needed to use components [SparseGridRamificationTopology] -->
        <RequiredPlugin name="Sofa.Component.Visual"/> <!-- Needed to use components [InteractiveCamera VisualStyle] -->
        <RequiredPlugin name="Sofa.GL.Component.Rendering3D"/> <!-- Needed to use components [OglModel] -->
        <RequiredPlugin name="Sofa.GL.Component.Shader"/> <!-- Needed to use components [LightManager SpotLight] -->
        <RequiredPlugin name="Sofa.Component.SceneUtility"/> <!-- Needed to use components [InfoComponent] -->
		  <RequiredPlugin name="Sofa.Component.Topology.Container.Dynamic"/> <!-- Needed to use components [TetrahedronSetTopologyContainer] -->
    </Node>
    
    <VisualStyle displayFlags="showVisual  " /> <!--showBehaviorModels showCollisionModels-->
    <LCPConstraintSolver tolerance="1e-3" maxIt="1000" initial_guess="false" build_lcp="false"  printLog="0" mu="0.2"/>
    <FreeMotionAnimationLoop parallelCollisionDetectionAndFreeMotion="true"/>
    <CollisionPipeline depth="15" verbose="0" draw="0" />
    <BruteForceBroadPhase/>
    <BVHNarrowPhase/>
    <MinProximityIntersection name="Proximity" alarmDistance="1.5" contactDistance="1.5" />

    <DefaultContactManager name="Response" response="LCPConstraintSolver" />

    <InteractiveCamera position="0 30 90" lookAt="0 30 0"/>
    <LightManager />
    <SpotLight name="light1" color="1 1 1" position="0 80 25" direction="0 -1 -0.8" cutoff="30" exponent="1" />
    <SpotLight name="light2" color="1 1 1" position="0 40 100" direction="0 0 -1" cutoff="30" exponent="1" />


    <Node name="Snake" >

		<MeshGmshLoader name="SnakeMeshLoader" filename="SpongeVol.msh" />
        <MeshTopology src="@SnakeMeshLoader" name="SnakeMeshTopology" />
        <MechanicalObject scale="1" src="@SnakeMeshTopology" name="SnakeMechanicalObject" />
		<TetrahedronSetTopologyContainer src="@SnakeMeshLoader" />
        <TetrahedronSetGeometryAlgorithms template="Vec3d" name="GeomAlgo" />


        <EulerImplicitSolver name="cg_odesolver" rayleighMass="1" rayleighStiffness="0.03" />
        <CGLinearSolver name="linear_solver" iterations="20" tolerance="1e-12" threshold="1e-18" template="CompressedRowSparseMatrixMat3x3"/>
        <DiagonalMass  name="computed using mass density" massDensity="1" />
        <TetrahedronFEMForceField name="FEM" youngModulus="300000.0" poissonRatio="0.3" method="large" updateStiffnessMatrix="false" printLog="0" />
        <UncoupledConstraintCorrection useOdeSolverIntegrationFactors="0"/>

        <Node name="Collis">
            <MeshOBJLoader name="loader" filename="Sponge.obj" />
            <MeshTopology src="@loader" />
            <MechanicalObject scale="1"  src="@loader" name="CollisModel" />
            <TriangleCollisionModel  selfCollision="0" />
            <LineCollisionModel    selfCollision="0" />
            <PointCollisionModel  selfCollision="1" />
            <BarycentricMapping input="@.." output="@." />

        </Node>

        
    </Node>

<Node name="Floor">

    <!-- Define the floor's geometry. Adjust nx, ny, size, and p0 as needed. -->
    <MeshTopology name="grid" triangles="0 1 2  2 1 3" quads="" position="-100 -5 -100  100 -5 -100  -100 -5 100  100 -5 100" />
    
    <MechanicalObject template="Vec3d" name="floorMechanicalObject" />
    
    <!-- Define the collision model for the floor. -->
    <TriangleCollisionModel name="FloorCollisionModel" selfCollision="0" />
    <LineCollisionModel selfCollision="0" />
    <PointCollisionModel selfCollision="0" />
    
    <!-- Visualization of the floor -->
    <OglModel name="floorVisual" color="0.5 0.5 0.5" src="@grid" />
    <BarycentricMapping input="@floorMechanicalObject" output="@floorVisual" />
</Node>

<Node name="CompressingBlock">

    <!-- Define the block's geometry. Adjust position for starting height. -->
    <MeshTopology name="blockGrid" triangles="0 1 2  2 1 3" quads="" position="-100 55 -100  100 55 -100  -100 55 100  100 55 100" />
    <MechanicalObject template="Vec3d" name="blockMechanicalObject" />

    <!-- Assign mass to the block to make it "heavy". -->
    <UniformMass totalMass="1000" />

    <!-- Define the collision model for the block. -->
    <TriangleCollisionModel name="BlockCollisionModel" selfCollision="0" />
    <LineCollisionModel selfCollision="0" />
    <PointCollisionModel selfCollision="0" />

    <!-- Visualization for the block. -->
    <OglModel name="blockVisual" color="1 0 0" src="@blockGrid" />
    <BarycentricMapping input="@blockMechanicalObject" output="@blockVisual" />

    <!-- Define the block's movement. Here, it moves downward at a rate of -1 unit per simulation step. -->

    <LinearMovementConstraint indices="0 1 2 3" keyTimes="0 1 2 3 4 5 6" movements="0 0 0  0 -20 0  0 -20 0  0 -20 0  0 -30 0  0 -30 0  0 -30 0 " />
</Node>
</Node>
